
services:
  student-service:
    build: ./student-service
    container_name: student-service
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/studentsdb
    networks:
      - backend

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  course-service:
    build: ./course-service
    container_name: course-service
    ports:
      - "5001:5000"
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=coursesdb
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=coursesdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  enrollment-service:
    build: ./enrollment-service
    container_name: enrollment-service
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - student-service
      - course-service
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=enrollmentsdb
    networks:
      - backend

  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=enrollmentsdb
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend

networks:
  backend:

volumes:
  mongo-data:
  postgres-data:
  mysql-data:

